---
version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.0-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz
      - chmod +x ./linux-amd64/helm
      - mv ./linux-amd64/helm /usr/local/bin/helm
  pre_build:
      commands:
#         - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
#         - sed -i 's@CONTAINER_IMAGE@'"478730168734.dkr.ecr.us-east-1.amazonaws.com/testjenkinscodebuild:latest"'@' hello-k8s.yml
#         - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
        
  build:
    commands:
#       - docker build -t 478730168734.dkr.ecr.us-east-1.amazonaws.com/testjenkinscodebuild .
      - kubectl get namespaces
      # - docker tag testjenkinscodebuild 478730168734.dkr.ecr.us-east-1.amazonaws.com/testjenkinscodebuild:latest
      
  post_build:
    commands:
#       - docker push 478730168734.dkr.ecr.us-east-1.amazonaws.com/testjenkinscodebuild:latest
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::165942629469:role/EksWorkshopCodeBuildKubectlRole --role-session-name testjenkinscodebuild --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name eg-testing-eks-cluster --region us-east-1
#       - cat /root/.kube/config
      - helm init --client-only --skip-refresh
      - helm ls 
      - helm install --name my-grafana stable/grafana 
#       - kubectl version --short
#       - kubectl get nodes
#       - kubectl apply -f hello-k8s.yml
#       - printf '[{"name":"hello-k8s","imageUri":"%s"}]' 478730168734.dkr.ecr.us-east-1.amazonaws.com/testjenkinscodebuild:latest > build.json
# artifacts:
#   files: build.json

